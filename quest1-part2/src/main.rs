use std::collections::HashMap;

fn main() {
    const NOTE : &str = "";
    let data = HashMap::from([("A", 0),("B", 1), ("C", 3), ("D", 5), ("x", 0)]);
    let mut total = 0;

    let mut i = 0;
    let mut j = 1;
    let mut k = 2;
    while k < NOTE.len() {
        // get the value of the character
        let creature1 = NOTE.chars().nth(i).unwrap();
        let creature2 = NOTE.chars().nth(j).unwrap();
        let creature3 = NOTE.chars().nth(k).unwrap();

        total += data.get(creature1.to_string().as_str()).unwrap();
        total += data.get(creature2.to_string().as_str()).unwrap();
        total += data.get(creature3.to_string().as_str()).unwrap();

        // check number of x for each creatures
        let x_count = [creature1, creature2, creature3].iter().filter(|&&c| c == 'x').count();
        if x_count == 0 {
            total += 6;
        } else if x_count == 1 {
            total += 2;
        }

        // move the pointers
        i += 3;
        j += 3;
        k += 3;
    }

    println!("Total: {}", total);
}
